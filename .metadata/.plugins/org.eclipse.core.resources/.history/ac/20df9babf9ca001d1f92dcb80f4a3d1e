package streams;

import java.util.Arrays;
import java.util.LinkedList;
import java.util.List;
import java.util.function.Function;
import java.util.stream.Collectors;

public class StreamsPrograms {

	//average of odd integers from int list
	static void prog2() {
		List<Integer> list = Arrays.asList(1,2,3,4,5);
		int avg = list.stream().filter(e -> e%2 == 1).reduce((e1, e2) -> e1 + e2).map(e -> e/2).get();
		System.out.println(" average of "+list + "= "+ avg);
	}
	
	
	
	
	//Interview
	//from list of integers..create list that contains elements that start with number 1
	static void prog1() {
        //int[] arr = {10, 15, 5, 20, 25, 100};
		LinkedList<Integer> list = new LinkedList<>();
		list.add(10);
		list.add(5);
		list.add(15);

		List<Integer> list2 = list.stream()
				.filter(n -> String.valueOf(n).startsWith("1")).collect(Collectors.toList());
		
		System.out.println(list2);
	}
	
	static void prog3() {
		
		final class Employee{
			int id;
			int age;
			
			Employee(int id, int age){
				this.id = id;
				this.age = age;
			}
			
			
		}
		
		List<Employee> list = Arrays.asList(new Employee(123, 23), new Employee(345, 24), new Employee(567, 25));
		
		int sum = list.stream().filter(emp -> emp.age % 2 != 0).map( emp -> emp.age * emp.age)
		.mapToInt(age2 -> age2.intValue()).sum();
		
		System.out.println(sum);
		
	}
	
	
	public static void main(String[] args) {
         prog1();	
         prog2();
         prog3();

	}

}

