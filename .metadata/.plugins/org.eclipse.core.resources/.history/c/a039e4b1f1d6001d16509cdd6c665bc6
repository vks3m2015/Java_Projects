package streams;

import java.util.Arrays;
import java.util.List;
import java.util.function.Supplier;
import java.util.stream.Stream;

//https://www.youtube.com/watch?v=nasQiFeJ-Gs&list=PLkhF8zTRdky_dEoAQMcActWjbaVLLL5Wv&index=4
public class ReusingStreams {

	public static void main(String[] args) {
		
		List<Integer> list = Arrays.asList(3,2,5,1);
		
		//Creating stream
		Stream<Integer> stream = list.stream();
		
		Stream<Integer>  mappedStream = stream.map( e  -> e*2);
		
		System.out.println("stream ="+ stream);
		System.out.println(" mappedStream = "+ mappedStream);
		
		//mappedStream.peek(e -> System.out.println(e));
		
		Stream<Integer> intermediateStream = stream.filter(e -> e > 2);
		System.out.println("intermediateStream = "+intermediateStream);
		
		//Stream<Integer> intermediateStream = stream.filter(e -> e>2);
		//System.out.println("intermediateStream = "+intermediateStream);
		
		//Stream<Integer> intermediateStream2 = intermediateStream.map(e -> e*2);
		//System.out.println("intermediateStream2 = "+intermediateStream2);
		
		/*
		 * int first = stream.findFirst().get(); System.out.println("First Element = "+
		 * first);
		 * 
		 * //reusing same stream long count = stream.count();
		 * System.out.println("count = "+ count);
		 */
		
		
		
		
	}
	
	static void usingSupplier(List<Integer> list){
       Supplier<Stream<Integer>> supplier = () -> list.stream();
		
		//using stream first time
		int first2 = supplier.get().findFirst().get();
		System.out.println("First Element = "+ first2);
		
		//reusing same stream
		long count2 = supplier.get().count();
		System.out.println("count = "+ count2);
	}
}
